$date
	Thu Nov  7 06:28:54 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 4 ! RESULT [3:0] $end
$var wire 1 " F_ZERO $end
$var parameter 32 # DATA_WIDTH $end
$var parameter 32 $ OPCODE_LENGTH $end
$var reg 4 % A [3:0] $end
$var reg 4 & B [3:0] $end
$var reg 3 ' OP [2:0] $end
$scope module uut $end
$var wire 3 ( operation [2:0] $end
$var wire 4 ) src_a [3:0] $end
$var wire 4 * src_b [3:0] $end
$var wire 4 + w0 [3:0] $end
$var wire 4 , w1 [3:0] $end
$var wire 4 - w7 [3:0] $end
$var wire 1 " zero_flag $end
$var wire 4 . w6 [3:0] $end
$var wire 4 / w5 [3:0] $end
$var wire 4 0 w4 [3:0] $end
$var wire 4 1 w3 [3:0] $end
$var wire 4 2 w2 [3:0] $end
$var wire 4 3 alu_result [3:0] $end
$scope module mux $end
$var wire 4 4 i0 [3:0] $end
$var wire 4 5 i1 [3:0] $end
$var wire 4 6 i2 [3:0] $end
$var wire 4 7 i3 [3:0] $end
$var wire 4 8 i4 [3:0] $end
$var wire 4 9 i5 [3:0] $end
$var wire 4 : i6 [3:0] $end
$var wire 4 ; i7 [3:0] $end
$var wire 3 < s [2:0] $end
$var wire 4 = y [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 $
b100 #
$end
#0
$dumpvars
b0 =
b0 <
b11 ;
b1 :
b0 9
b1111 8
b10 7
b11 6
b11 5
b0 4
b0 3
b11 2
b10 1
b1111 0
b0 /
b1 .
b11 -
b11 ,
b0 +
b10 *
b1 )
b0 (
b0 '
b10 &
b1 %
1"
b0 !
$end
#1
0"
b11 !
b11 3
b11 =
b10 +
b10 4
b1 -
b1 ;
b100 1
b100 7
b1 /
b1 9
b1 '
b1 (
b1 <
b11 &
b11 *
b101 2
b101 6
b1111 0
b1111 8
b10 %
b10 )
#2
0"
b100 !
b100 3
b100 =
b1 +
b1 4
b10 -
b10 ;
b10 1
b10 7
b0 /
b0 9
b10 '
b10 (
b10 <
b100 2
b100 6
b1110 0
b1110 8
b1 %
b1 )
#3
b100 !
b100 3
b100 =
b0 .
b0 :
b0 +
b0 4
b11 -
b11 ;
b100 1
b100 7
b1 /
b1 9
b11 '
b11 (
b11 <
b1 &
b1 *
b11 2
b11 6
b1 0
b1 8
b10 %
b10 )
#4
0"
b11 !
b11 3
b11 =
b101 ,
b101 5
b101 -
b101 ;
b1000 1
b1000 7
b10 /
b10 9
b100 '
b100 (
b100 <
b101 2
b101 6
b11 0
b11 8
b100 %
b100 )
#5
b10 !
b10 3
b10 =
b101 '
b101 (
b101 <
#6
1"
b0 !
b0 3
b0 =
b10 +
b10 4
b110 ,
b110 5
b100 -
b100 ;
b1100 1
b1100 7
b11 /
b11 9
b110 '
b110 (
b110 <
b10 &
b10 *
b1000 2
b1000 6
b100 0
b100 8
b110 %
b110 )
#7
0"
b1 !
b1 3
b1 =
b11 ,
b11 5
b1 -
b1 ;
b110 1
b110 7
b1 /
b1 9
b111 '
b111 (
b111 <
b101 2
b101 6
b1 0
b1 8
b11 %
b11 )
#20
